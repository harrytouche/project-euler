"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

from functools import reduce


def SumTwoNumbers(a, b):
    return a + b


def IsEvenNumber(n):
    return not (n % 2)


# find fibonacci numbers less than defined ceiling
sequence = [1, 2]
maximum = 4e6

while sequence[-1] < maximum:
    sequence.append(SumTwoNumbers(sequence[-2], sequence[-1]))

print(sequence[0:10])
print(sequence[-10:])


# remove even numbers
even_sequence = list(filter(IsEvenNumber, sequence))


# sum array
output = reduce(SumTwoNumbers, even_sequence)
print(output)
